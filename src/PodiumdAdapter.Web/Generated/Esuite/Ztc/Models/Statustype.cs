// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Generated.Esuite.ZtcClient.Models {
    public class Statustype : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Is de zaak status een einds status.</summary>
        public bool? IsEindstatus { get; private set; }
        /// <summary>Naam van de zaak status.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Omschrijving { get; set; }
#nullable restore
#else
        public string Omschrijving { get; set; }
#endif
        /// <summary>Omschrijving van de zaak status.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OmschrijvingGeneriek { get; set; }
#nullable restore
#else
        public string OmschrijvingGeneriek { get; set; }
#endif
        /// <summary>Externe naam, naam van de status zoals deze getoond wordt in het publieke deel (burger en bedrijven loket), van de zaak status.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Statustekst { get; set; }
#nullable restore
#else
        public string Statustekst { get; set; }
#endif
        /// <summary>URL-referentie naar dit object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; private set; }
#nullable restore
#else
        public string Url { get; private set; }
#endif
        /// <summary>In e-Suite heeft een statustype geen volgnummer. Deze waarde is daarom altijd &apos;null&apos;.</summary>
        public int? Volgnummer { get; set; }
        /// <summary>In e-Suite is een statustype gekoppeld aan meerdere zaaktypes. Deze waarde is daarom altijd &apos;null&apos;.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Zaaktype { get; set; }
#nullable restore
#else
        public string Zaaktype { get; set; }
#endif
        /// <summary>
        /// Instantiates a new Statustype and sets the default values.
        /// </summary>
        public Statustype() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Statustype CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Statustype();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"isEindstatus", n => { IsEindstatus = n.GetBoolValue(); } },
                {"omschrijving", n => { Omschrijving = n.GetStringValue(); } },
                {"omschrijvingGeneriek", n => { OmschrijvingGeneriek = n.GetStringValue(); } },
                {"statustekst", n => { Statustekst = n.GetStringValue(); } },
                {"url", n => { Url = n.GetStringValue(); } },
                {"volgnummer", n => { Volgnummer = n.GetIntValue(); } },
                {"zaaktype", n => { Zaaktype = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("omschrijving", Omschrijving);
            writer.WriteStringValue("omschrijvingGeneriek", OmschrijvingGeneriek);
            writer.WriteStringValue("statustekst", Statustekst);
            writer.WriteIntValue("volgnummer", Volgnummer);
            writer.WriteStringValue("zaaktype", Zaaktype);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
