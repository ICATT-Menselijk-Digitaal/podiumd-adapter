// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Generated.Esuite.ZtcClient.Models {
    public class Informatieobjecttype : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>In e-Suite is deze waarde niet aanwezig. Waarde is daarom altijd gelijk aan de datum van vandaag.</summary>
        public Date? BeginGeldigheid { get; set; }
        /// <summary>In e-Suite is het concept Catalogus niet aanwezig. Waarde verwijst daarom naar een fictieve Catalogus.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Catalogus { get; set; }
#nullable restore
#else
        public string Catalogus { get; set; }
#endif
        /// <summary>Naam van het documenttype.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Omschrijving { get; set; }
#nullable restore
#else
        public string Omschrijving { get; set; }
#endif
        /// <summary>URL-referentie naar dit object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; private set; }
#nullable restore
#else
        public string Url { get; private set; }
#endif
        /// <summary>Publicatieniveau van het documenttype.</summary>
        public Informatieobjecttype_vertrouwelijkheidaanduiding? Vertrouwelijkheidaanduiding { get; set; }
        /// <summary>
        /// Instantiates a new Informatieobjecttype and sets the default values.
        /// </summary>
        public Informatieobjecttype() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Informatieobjecttype CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Informatieobjecttype();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"beginGeldigheid", n => { BeginGeldigheid = n.GetDateValue(); } },
                {"catalogus", n => { Catalogus = n.GetStringValue(); } },
                {"omschrijving", n => { Omschrijving = n.GetStringValue(); } },
                {"url", n => { Url = n.GetStringValue(); } },
                {"vertrouwelijkheidaanduiding", n => { Vertrouwelijkheidaanduiding = n.GetEnumValue<Informatieobjecttype_vertrouwelijkheidaanduiding>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateValue("beginGeldigheid", BeginGeldigheid);
            writer.WriteStringValue("catalogus", Catalogus);
            writer.WriteStringValue("omschrijving", Omschrijving);
            writer.WriteEnumValue<Informatieobjecttype_vertrouwelijkheidaanduiding>("vertrouwelijkheidaanduiding", Vertrouwelijkheidaanduiding);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
