// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Generated.Esuite.ZrcClient.Models {
    public class NatuurlijkPersoon : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Het door de gemeente uitgegeven unieke nummer voor een Ander Natuurlijk Persoon</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AnpIdentificatie { get; private set; }
#nullable restore
#else
        public string AnpIdentificatie { get; private set; }
#endif
        /// <summary>Formaat is dd-mm-jjjj. Dit kan een onvolledige datum zijn waarbij dd = 00 of mm = 00 of jjjj = 0000</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Geboortedatum { get; set; }
#nullable restore
#else
        public string Geboortedatum { get; set; }
#endif
        /// <summary>The geslachtsaanduiding property</summary>
        public NatuurlijkPersoon_geslachtsaanduiding? Geslachtsaanduiding { get; set; }
        /// <summary>De stam van de geslachtsnaam</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Geslachtsnaam { get; set; }
#nullable restore
#else
        public string Geslachtsnaam { get; set; }
#endif
        /// <summary>Het Administratienummer van de persoon</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InpANummer { get; set; }
#nullable restore
#else
        public string InpANummer { get; set; }
#endif
        /// <summary>burgerservicenummer</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InpBsn { get; set; }
#nullable restore
#else
        public string InpBsn { get; set; }
#endif
        /// <summary>Vestigings adres in buitenland</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Generated.Esuite.ZrcClient.Models.SubVerblijfBuitenland? SubVerblijfBuitenland { get; private set; }
#nullable restore
#else
        public Generated.Esuite.ZrcClient.Models.SubVerblijfBuitenland SubVerblijfBuitenland { get; private set; }
#endif
        /// <summary>Vestigings adres</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public VerblijfAdres? Verblijfsadres { get; private set; }
#nullable restore
#else
        public VerblijfAdres Verblijfsadres { get; private set; }
#endif
        /// <summary>The voorletters property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Voorletters { get; set; }
#nullable restore
#else
        public string Voorletters { get; set; }
#endif
        /// <summary>The voornamen property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Voornamen { get; set; }
#nullable restore
#else
        public string Voornamen { get; set; }
#endif
        /// <summary>The voorvoegselGeslachtsnaam property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VoorvoegselGeslachtsnaam { get; set; }
#nullable restore
#else
        public string VoorvoegselGeslachtsnaam { get; set; }
#endif
        /// <summary>
        /// Instantiates a new NatuurlijkPersoon and sets the default values.
        /// </summary>
        public NatuurlijkPersoon() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static NatuurlijkPersoon CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new NatuurlijkPersoon();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"anpIdentificatie", n => { AnpIdentificatie = n.GetStringValue(); } },
                {"geboortedatum", n => { Geboortedatum = n.GetStringValue(); } },
                {"geslachtsaanduiding", n => { Geslachtsaanduiding = n.GetEnumValue<NatuurlijkPersoon_geslachtsaanduiding>(); } },
                {"geslachtsnaam", n => { Geslachtsnaam = n.GetStringValue(); } },
                {"inpA_nummer", n => { InpANummer = n.GetStringValue(); } },
                {"inpBsn", n => { InpBsn = n.GetStringValue(); } },
                {"subVerblijfBuitenland", n => { SubVerblijfBuitenland = n.GetObjectValue<Generated.Esuite.ZrcClient.Models.SubVerblijfBuitenland>(Generated.Esuite.ZrcClient.Models.SubVerblijfBuitenland.CreateFromDiscriminatorValue); } },
                {"verblijfsadres", n => { Verblijfsadres = n.GetObjectValue<VerblijfAdres>(VerblijfAdres.CreateFromDiscriminatorValue); } },
                {"voorletters", n => { Voorletters = n.GetStringValue(); } },
                {"voornamen", n => { Voornamen = n.GetStringValue(); } },
                {"voorvoegselGeslachtsnaam", n => { VoorvoegselGeslachtsnaam = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("geboortedatum", Geboortedatum);
            writer.WriteEnumValue<NatuurlijkPersoon_geslachtsaanduiding>("geslachtsaanduiding", Geslachtsaanduiding);
            writer.WriteStringValue("geslachtsnaam", Geslachtsnaam);
            writer.WriteStringValue("inpA_nummer", InpANummer);
            writer.WriteStringValue("inpBsn", InpBsn);
            writer.WriteStringValue("voorletters", Voorletters);
            writer.WriteStringValue("voornamen", Voornamen);
            writer.WriteStringValue("voorvoegselGeslachtsnaam", VoorvoegselGeslachtsnaam);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
