// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Generated.Esuite.ZrcClient.Models {
    public class Rol : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Type betrokkene</summary>
        public Rol_betrokkeneType? BetrokkeneType { get; set; }
        /// <summary>The indicatieMachtiging property</summary>
        public Rol_indicatieMachtiging? IndicatieMachtiging { get; private set; }
        /// <summary>Omschrijving overgenomen uit roltype</summary>
        public Rol_omschrijving? Omschrijving { get; private set; }
        /// <summary>Omschrijving generiek overgenomen uit roltype</summary>
        public Rol_omschrijvingGeneriek? OmschrijvingGeneriek { get; private set; }
        /// <summary>Toelichting bij een zaak betrokkene in e-Suite</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Roltoelichting { get; set; }
#nullable restore
#else
        public string Roltoelichting { get; set; }
#endif
        /// <summary>URL referentie naar een roltype</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Roltype { get; set; }
#nullable restore
#else
        public string Roltype { get; set; }
#endif
        /// <summary>URL-referentie naar dit object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; private set; }
#nullable restore
#else
        public string Url { get; private set; }
#endif
        /// <summary>Unieke resource identifier (UUID4)</summary>
        public Guid? Uuid { get; private set; }
        /// <summary>URI van een zaak.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Zaak { get; set; }
#nullable restore
#else
        public string Zaak { get; set; }
#endif
        /// <summary>
        /// Instantiates a new Rol and sets the default values.
        /// </summary>
        public Rol() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Rol CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("betrokkeneType")?.GetStringValue();
            return mappingValue switch {
                "MedewerkerRol" => new MedewerkerRol(),
                "NatuurlijkPersoonRol" => new NatuurlijkPersoonRol(),
                "NietNatuurlijkPersoonRol" => new NietNatuurlijkPersoonRol(),
                "VestigingRol" => new VestigingRol(),
                _ => new Rol(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"betrokkeneType", n => { BetrokkeneType = n.GetEnumValue<Rol_betrokkeneType>(); } },
                {"indicatieMachtiging", n => { IndicatieMachtiging = n.GetEnumValue<Rol_indicatieMachtiging>(); } },
                {"omschrijving", n => { Omschrijving = n.GetEnumValue<Rol_omschrijving>(); } },
                {"omschrijvingGeneriek", n => { OmschrijvingGeneriek = n.GetEnumValue<Rol_omschrijvingGeneriek>(); } },
                {"roltoelichting", n => { Roltoelichting = n.GetStringValue(); } },
                {"roltype", n => { Roltype = n.GetStringValue(); } },
                {"url", n => { Url = n.GetStringValue(); } },
                {"uuid", n => { Uuid = n.GetGuidValue(); } },
                {"zaak", n => { Zaak = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<Rol_betrokkeneType>("betrokkeneType", BetrokkeneType);
            writer.WriteStringValue("roltoelichting", Roltoelichting);
            writer.WriteStringValue("roltype", Roltype);
            writer.WriteStringValue("zaak", Zaak);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
