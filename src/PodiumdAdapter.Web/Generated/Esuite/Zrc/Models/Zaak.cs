// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Generated.Esuite.ZrcClient.Models {
    public class Zaak : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Betaalgegevens van de zaak.</summary>
        public Zaak_betalingsindicatie? Betalingsindicatie { get; set; }
        /// <summary>Alle beschikbare betaalgegevens.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BetalingsindicatieWeergave { get; private set; }
#nullable restore
#else
        public string BetalingsindicatieWeergave { get; private set; }
#endif
        /// <summary>Het RSIN van de gemeeente.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Bronorganisatie { get; set; }
#nullable restore
#else
        public string Bronorganisatie { get; set; }
#endif
        /// <summary>Naam van het kanaal via welke de zaak is aangemaakt.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Communicatiekanaal { get; set; }
#nullable restore
#else
        public string Communicatiekanaal { get; set; }
#endif
        /// <summary>Deelzaken van zaak in e-Suite</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Deelzaken { get; private set; }
#nullable restore
#else
        public List<string> Deelzaken { get; private set; }
#endif
        /// <summary>Einddatum van zaak.</summary>
        public Date? Einddatum { get; private set; }
        /// <summary>Streefdatum van zaak.</summary>
        public Date? EinddatumGepland { get; set; }
        /// <summary>Hoofdzaak van zaak in e-Suite</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Hoofdzaak { get; set; }
#nullable restore
#else
        public string Hoofdzaak { get; set; }
#endif
        /// <summary>Externe identificatie van zaak.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Identificatie { get; set; }
#nullable restore
#else
        public string Identificatie { get; set; }
#endif
        /// <summary>Transactie datum van betaalgegevens van zaak</summary>
        public DateTimeOffset? LaatsteBetaaldatum { get; set; }
        /// <summary>Omschrijving van zaak.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Omschrijving { get; set; }
#nullable restore
#else
        public string Omschrijving { get; set; }
#endif
        /// <summary>Creatiedatum van zaak.</summary>
        public Date? Registratiedatum { get; private set; }
        /// <summary>The relevanteAndereZaken property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<RelevanteZaak>? RelevanteAndereZaken { get; set; }
#nullable restore
#else
        public List<RelevanteZaak> RelevanteAndereZaken { get; set; }
#endif
        /// <summary>Resultaat van zaak.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Resultaat { get; private set; }
#nullable restore
#else
        public string Resultaat { get; private set; }
#endif
        /// <summary>Startdatum van zaak.</summary>
        public Date? Startdatum { get; set; }
        /// <summary>Status van zaak.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Status { get; private set; }
#nullable restore
#else
        public string Status { get; private set; }
#endif
        /// <summary>Reden start zaak.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Toelichting { get; set; }
#nullable restore
#else
        public string Toelichting { get; set; }
#endif
        /// <summary>Fatale datum van zaak.</summary>
        public Date? UiterlijkeEinddatumAfdoening { get; set; }
        /// <summary>URL-referentie naar dit object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; private set; }
#nullable restore
#else
        public string Url { get; private set; }
#endif
        /// <summary>Unieke resource identifier (UUID4)</summary>
        public Guid? Uuid { get; private set; }
        /// <summary>RSIN van de organisatie die eindverantwoordelijk is voor de behandeling van de zaak.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VerantwoordelijkeOrganisatie { get; set; }
#nullable restore
#else
        public string VerantwoordelijkeOrganisatie { get; set; }
#endif
        /// <summary>Indicatie vertrouwelijk van zaak in e-Suite. Waarde &apos;openbaar&apos; betekend niet vertrouwelijk. Alle andere waarden impliceren vertrouwelijk</summary>
        public Zaak_vertrouwelijkheidaanduiding? Vertrouwelijkheidaanduiding { get; set; }
        /// <summary>Alleen het ophalen van een Punt geometrie wordt ondersteund.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Geometry? Zaakgeometrie { get; private set; }
#nullable restore
#else
        public Geometry Zaakgeometrie { get; private set; }
#endif
        /// <summary>URI van het zaaktype.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Zaaktype { get; set; }
#nullable restore
#else
        public string Zaaktype { get; set; }
#endif
        /// <summary>
        /// Instantiates a new Zaak and sets the default values.
        /// </summary>
        public Zaak() {
            AdditionalData = new Dictionary<string, object>();
            Omschrijving = "Zaak aangemaakt via ZGW API's provider.";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Zaak CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Zaak();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"betalingsindicatie", n => { Betalingsindicatie = n.GetEnumValue<Zaak_betalingsindicatie>(); } },
                {"betalingsindicatieWeergave", n => { BetalingsindicatieWeergave = n.GetStringValue(); } },
                {"bronorganisatie", n => { Bronorganisatie = n.GetStringValue(); } },
                {"communicatiekanaal", n => { Communicatiekanaal = n.GetStringValue(); } },
                {"deelzaken", n => { Deelzaken = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"einddatum", n => { Einddatum = n.GetDateValue(); } },
                {"einddatumGepland", n => { EinddatumGepland = n.GetDateValue(); } },
                {"hoofdzaak", n => { Hoofdzaak = n.GetStringValue(); } },
                {"identificatie", n => { Identificatie = n.GetStringValue(); } },
                {"laatsteBetaaldatum", n => { LaatsteBetaaldatum = n.GetDateTimeOffsetValue(); } },
                {"omschrijving", n => { Omschrijving = n.GetStringValue(); } },
                {"registratiedatum", n => { Registratiedatum = n.GetDateValue(); } },
                {"relevanteAndereZaken", n => { RelevanteAndereZaken = n.GetCollectionOfObjectValues<RelevanteZaak>(RelevanteZaak.CreateFromDiscriminatorValue)?.ToList(); } },
                {"resultaat", n => { Resultaat = n.GetStringValue(); } },
                {"startdatum", n => { Startdatum = n.GetDateValue(); } },
                {"status", n => { Status = n.GetStringValue(); } },
                {"toelichting", n => { Toelichting = n.GetStringValue(); } },
                {"uiterlijkeEinddatumAfdoening", n => { UiterlijkeEinddatumAfdoening = n.GetDateValue(); } },
                {"url", n => { Url = n.GetStringValue(); } },
                {"uuid", n => { Uuid = n.GetGuidValue(); } },
                {"verantwoordelijkeOrganisatie", n => { VerantwoordelijkeOrganisatie = n.GetStringValue(); } },
                {"vertrouwelijkheidaanduiding", n => { Vertrouwelijkheidaanduiding = n.GetEnumValue<Zaak_vertrouwelijkheidaanduiding>(); } },
                {"zaakgeometrie", n => { Zaakgeometrie = n.GetObjectValue<Geometry>(Geometry.CreateFromDiscriminatorValue); } },
                {"zaaktype", n => { Zaaktype = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<Zaak_betalingsindicatie>("betalingsindicatie", Betalingsindicatie);
            writer.WriteStringValue("bronorganisatie", Bronorganisatie);
            writer.WriteStringValue("communicatiekanaal", Communicatiekanaal);
            writer.WriteDateValue("einddatumGepland", EinddatumGepland);
            writer.WriteStringValue("hoofdzaak", Hoofdzaak);
            writer.WriteStringValue("identificatie", Identificatie);
            writer.WriteDateTimeOffsetValue("laatsteBetaaldatum", LaatsteBetaaldatum);
            writer.WriteStringValue("omschrijving", Omschrijving);
            writer.WriteCollectionOfObjectValues<RelevanteZaak>("relevanteAndereZaken", RelevanteAndereZaken);
            writer.WriteDateValue("startdatum", Startdatum);
            writer.WriteStringValue("toelichting", Toelichting);
            writer.WriteDateValue("uiterlijkeEinddatumAfdoening", UiterlijkeEinddatumAfdoening);
            writer.WriteStringValue("verantwoordelijkeOrganisatie", VerantwoordelijkeOrganisatie);
            writer.WriteEnumValue<Zaak_vertrouwelijkheidaanduiding>("vertrouwelijkheidaanduiding", Vertrouwelijkheidaanduiding);
            writer.WriteStringValue("zaaktype", Zaaktype);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
