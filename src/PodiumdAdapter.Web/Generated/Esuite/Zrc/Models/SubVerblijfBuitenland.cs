// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Generated.Esuite.ZrcClient.Models {
    /// <summary>
    /// Vestigings adres in buitenland
    /// </summary>
    public class SubVerblijfBuitenland : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>De code, behorende bij de landnaam, zoals opgenomen in de Land/Gebied-tabel van de BSP</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LndLandcode { get; set; }
#nullable restore
#else
        public string LndLandcode { get; set; }
#endif
        /// <summary>De naam van het land, zoals opgenomen in de Land/Gebied-tabel van de BRP</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LndLandnaam { get; set; }
#nullable restore
#else
        public string LndLandnaam { get; set; }
#endif
        /// <summary>The subAdresBuitenland_1 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubAdresBuitenland1 { get; set; }
#nullable restore
#else
        public string SubAdresBuitenland1 { get; set; }
#endif
        /// <summary>The subAdresBuitenland_2 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubAdresBuitenland2 { get; set; }
#nullable restore
#else
        public string SubAdresBuitenland2 { get; set; }
#endif
        /// <summary>The subAdresBuitenland_3 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubAdresBuitenland3 { get; set; }
#nullable restore
#else
        public string SubAdresBuitenland3 { get; set; }
#endif
        /// <summary>
        /// Instantiates a new SubVerblijfBuitenland and sets the default values.
        /// </summary>
        public SubVerblijfBuitenland() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static SubVerblijfBuitenland CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new SubVerblijfBuitenland();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"lndLandcode", n => { LndLandcode = n.GetStringValue(); } },
                {"lndLandnaam", n => { LndLandnaam = n.GetStringValue(); } },
                {"subAdresBuitenland_1", n => { SubAdresBuitenland1 = n.GetStringValue(); } },
                {"subAdresBuitenland_2", n => { SubAdresBuitenland2 = n.GetStringValue(); } },
                {"subAdresBuitenland_3", n => { SubAdresBuitenland3 = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("lndLandcode", LndLandcode);
            writer.WriteStringValue("lndLandnaam", LndLandnaam);
            writer.WriteStringValue("subAdresBuitenland_1", SubAdresBuitenland1);
            writer.WriteStringValue("subAdresBuitenland_2", SubAdresBuitenland2);
            writer.WriteStringValue("subAdresBuitenland_3", SubAdresBuitenland3);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
