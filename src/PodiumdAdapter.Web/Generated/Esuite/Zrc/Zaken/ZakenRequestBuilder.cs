// <auto-generated/>
using Generated.Esuite.ZrcClient.Models;
using Generated.Esuite.ZrcClient.Zaken.Item;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Generated.Esuite.ZrcClient.Zaken {
    /// <summary>
    /// Builds and executes requests for operations under \zaken
    /// </summary>
    public class ZakenRequestBuilder : BaseRequestBuilder {
        /// <summary>Gets an item from the Generated.Esuite.ZrcClient.zaken.item collection</summary>
        /// <param name="position">Unieke resource identifier (UUID4)</param>
        public WithUuItemRequestBuilder this[Guid position] { get {
            var urlTplParams = new Dictionary<string, object>(PathParameters);
            urlTplParams.Add("uuid", position);
            return new WithUuItemRequestBuilder(urlTplParams, RequestAdapter);
        } }
        /// <summary>Gets an item from the Generated.Esuite.ZrcClient.zaken.item collection</summary>
        /// <param name="position">Unieke resource identifier (UUID4)</param>
        [Obsolete("This indexer is deprecated and will be removed in the next major version. Use the one with the typed parameter instead.")]
        public WithUuItemRequestBuilder this[string position] { get {
            var urlTplParams = new Dictionary<string, object>(PathParameters);
            if (!string.IsNullOrWhiteSpace(position)) urlTplParams.Add("uuid", position);
            return new WithUuItemRequestBuilder(urlTplParams, RequestAdapter);
        } }
        /// <summary>
        /// Instantiates a new ZakenRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ZakenRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/zaken{?identificatie*,zaaktype*,statustype*,rol__betrokkeneIdentificatie__natuurlijkPersoon__inpBsn*,rol__betrokkeneIdentificatie__vestiging__vestigingsNummer*,rol__betrokkeneIdentificatie__nietNatuurlijkPersoon__innNnpId*,rol__omschrijvingGeneriek*,startdatum*,startdatum__gte*,startdatum__lte*,einddatum__isnull*,ordering*,page*}", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new ZakenRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ZakenRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/zaken{?identificatie*,zaaktype*,statustype*,rol__betrokkeneIdentificatie__natuurlijkPersoon__inpBsn*,rol__betrokkeneIdentificatie__vestiging__vestigingsNummer*,rol__betrokkeneIdentificatie__nietNatuurlijkPersoon__innNnpId*,rol__omschrijvingGeneriek*,startdatum*,startdatum__gte*,startdatum__lte*,einddatum__isnull*,ordering*,page*}", rawUrl) {
        }
        /// <summary>
        /// Deze lijst kan gefilterd worden met query-string parameters. identificatie kan niet worden gebruikt in combinatie met andere parameters. rol__betrokkeneIdentificatie__natuurlijkPersoon__inpBsn kan niet worden gebruikt in combinatie met rol__betrokkeneIdentificatie__vestiging__vestigingsNummer of rol__betrokkeneIdentificatie__nietNatuurlijkPersoon__innNnpId. Wanneer alleen rol__betrokkeneIdentificatie__vestiging__vestigingsNummer gevuld is wordt gezocht naar een bedrijf met dit vestigingsnummer. Wanneer alleen rol__betrokkeneIdentificatie__nietNatuurlijkPersoon__innNnpId gevuld is wordt gezocht naar een bedrijf met dit KvK nummer en zonder vestigingsnummer. Wanneer zowel rol__betrokkeneIdentificatie__vestiging__vestigingsNummer als rol__betrokkeneIdentificatie__nietNatuurlijkPersoon__innNnpId gevuld zijn wordt gezocht naar een bedrijf met een gelijke waarde voor beide attributen. 
        /// </summary>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<ZaakResults?> GetAsync(Action<RequestConfiguration<ZakenRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default) {
#nullable restore
#else
        public async Task<ZaakResults> GetAsync(Action<RequestConfiguration<ZakenRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default) {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>> {
                {"400", ValidatieFout.CreateFromDiscriminatorValue},
                {"401", Fout.CreateFromDiscriminatorValue},
                {"403", Fout.CreateFromDiscriminatorValue},
                {"500", Fout.CreateFromDiscriminatorValue},
            };
            return await RequestAdapter.SendAsync<ZaakResults>(requestInfo, ZaakResults.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Indien geen identificatie gegeven is, dan wordt deze automatisch gegenereerd.
        /// </summary>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<Zaak?> PostAsync(Zaak body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default) {
#nullable restore
#else
        public async Task<Zaak> PostAsync(Zaak body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default) {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>> {
                {"400", ValidatieFout.CreateFromDiscriminatorValue},
                {"401", Fout.CreateFromDiscriminatorValue},
                {"403", Fout.CreateFromDiscriminatorValue},
                {"500", Fout.CreateFromDiscriminatorValue},
            };
            return await RequestAdapter.SendAsync<Zaak>(requestInfo, Zaak.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Deze lijst kan gefilterd worden met query-string parameters. identificatie kan niet worden gebruikt in combinatie met andere parameters. rol__betrokkeneIdentificatie__natuurlijkPersoon__inpBsn kan niet worden gebruikt in combinatie met rol__betrokkeneIdentificatie__vestiging__vestigingsNummer of rol__betrokkeneIdentificatie__nietNatuurlijkPersoon__innNnpId. Wanneer alleen rol__betrokkeneIdentificatie__vestiging__vestigingsNummer gevuld is wordt gezocht naar een bedrijf met dit vestigingsnummer. Wanneer alleen rol__betrokkeneIdentificatie__nietNatuurlijkPersoon__innNnpId gevuld is wordt gezocht naar een bedrijf met dit KvK nummer en zonder vestigingsnummer. Wanneer zowel rol__betrokkeneIdentificatie__vestiging__vestigingsNummer als rol__betrokkeneIdentificatie__nietNatuurlijkPersoon__innNnpId gevuld zijn wordt gezocht naar een bedrijf met een gelijke waarde voor beide attributen. 
        /// </summary>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<ZakenRequestBuilderGetQueryParameters>>? requestConfiguration = default) {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<ZakenRequestBuilderGetQueryParameters>> requestConfiguration = default) {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Indien geen identificatie gegeven is, dan wordt deze automatisch gegenereerd.
        /// </summary>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(Zaak body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default) {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(Zaak body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default) {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public ZakenRequestBuilder WithUrl(string rawUrl) {
            return new ZakenRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Deze lijst kan gefilterd worden met query-string parameters. identificatie kan niet worden gebruikt in combinatie met andere parameters. rol__betrokkeneIdentificatie__natuurlijkPersoon__inpBsn kan niet worden gebruikt in combinatie met rol__betrokkeneIdentificatie__vestiging__vestigingsNummer of rol__betrokkeneIdentificatie__nietNatuurlijkPersoon__innNnpId. Wanneer alleen rol__betrokkeneIdentificatie__vestiging__vestigingsNummer gevuld is wordt gezocht naar een bedrijf met dit vestigingsnummer. Wanneer alleen rol__betrokkeneIdentificatie__nietNatuurlijkPersoon__innNnpId gevuld is wordt gezocht naar een bedrijf met dit KvK nummer en zonder vestigingsnummer. Wanneer zowel rol__betrokkeneIdentificatie__vestiging__vestigingsNummer als rol__betrokkeneIdentificatie__nietNatuurlijkPersoon__innNnpId gevuld zijn wordt gezocht naar een bedrijf met een gelijke waarde voor beide attributen. 
        /// </summary>
        public class ZakenRequestBuilderGetQueryParameters {
            /// <summary>De einddatum is leeg. Hiermee kan gefilterd worden op alleen open (einddatum__isnull=true) of gesloten (einddatum__isnull=false) zaken.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("einddatum__isnull")]
            public string? EinddatumIsnull { get; set; }
#nullable restore
#else
            [QueryParameter("einddatum__isnull")]
            public string EinddatumIsnull { get; set; }
#endif
            /// <summary>Externe identificatie van zaak.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("identificatie")]
            public string? Identificatie { get; set; }
#nullable restore
#else
            [QueryParameter("identificatie")]
            public string Identificatie { get; set; }
#endif
            /// <summary>Veld waarop het resultaat gesorteerd wordt.</summary>
            [Obsolete("This property is deprecated, use orderingAsGetOrderingQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("ordering")]
            public string? Ordering { get; set; }
#nullable restore
#else
            [QueryParameter("ordering")]
            public string Ordering { get; set; }
#endif
            /// <summary>Veld waarop het resultaat gesorteerd wordt.</summary>
            [QueryParameter("ordering")]
            public GetOrderingQueryParameterType? OrderingAsGetOrderingQueryParameterType { get; set; }
            /// <summary>Een pagina binnen de gepagineerde set resultaten.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("page")]
            public string? Page { get; set; }
#nullable restore
#else
            [QueryParameter("page")]
            public string Page { get; set; }
#endif
            /// <summary>Burgerservicenummer van persoon die initiator is van een zaak</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("rol__betrokkeneIdentificatie__natuurlijkPersoon__inpBsn")]
            public string? RolBetrokkeneIdentificatieNatuurlijkPersoonInpBsn { get; set; }
#nullable restore
#else
            [QueryParameter("rol__betrokkeneIdentificatie__natuurlijkPersoon__inpBsn")]
            public string RolBetrokkeneIdentificatieNatuurlijkPersoonInpBsn { get; set; }
#endif
            /// <summary>KVK nummer van bedrijf welke initiator is van een zaak</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("rol__betrokkeneIdentificatie__nietNatuurlijkPersoon__innNnpId")]
            public string? RolBetrokkeneIdentificatieNietNatuurlijkPersoonInnNnpId { get; set; }
#nullable restore
#else
            [QueryParameter("rol__betrokkeneIdentificatie__nietNatuurlijkPersoon__innNnpId")]
            public string RolBetrokkeneIdentificatieNietNatuurlijkPersoonInnNnpId { get; set; }
#endif
            /// <summary>Vestigingsnummer van bedrijf welke initiator is van een zaak</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("rol__betrokkeneIdentificatie__vestiging__vestigingsNummer")]
            public string? RolBetrokkeneIdentificatieVestigingVestigingsNummer { get; set; }
#nullable restore
#else
            [QueryParameter("rol__betrokkeneIdentificatie__vestiging__vestigingsNummer")]
            public string RolBetrokkeneIdentificatieVestigingVestigingsNummer { get; set; }
#endif
            /// <summary>Omschrijving generiek overgenomen uit roltype. Deze parameter kan alleen worden gebruikt wanneer tevens wordt gefilterd op BSN, KVK of Vestigingsnummer</summary>
            [Obsolete("This property is deprecated, use rol__omschrijvingGeneriekAsGetRol__omschrijvingGeneriekQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("rol__omschrijvingGeneriek")]
            public string? RolOmschrijvingGeneriek { get; set; }
#nullable restore
#else
            [QueryParameter("rol__omschrijvingGeneriek")]
            public string RolOmschrijvingGeneriek { get; set; }
#endif
            /// <summary>Omschrijving generiek overgenomen uit roltype. Deze parameter kan alleen worden gebruikt wanneer tevens wordt gefilterd op BSN, KVK of Vestigingsnummer</summary>
            [QueryParameter("rol__omschrijvingGeneriek")]
            public GetRol__omschrijvingGeneriekQueryParameterType? RolOmschrijvingGeneriekAsGetRolOmschrijvingGeneriekQueryParameterType { get; set; }
            /// <summary>Startdatum van een zaak</summary>
            [QueryParameter("startdatum")]
            public Date? Startdatum { get; set; }
            /// <summary>Startdatum van een zaak vanaf</summary>
            [QueryParameter("startdatum__gte")]
            public Date? StartdatumGte { get; set; }
            /// <summary>Startdatum van een zaak tot en met</summary>
            [QueryParameter("startdatum__lte")]
            public Date? StartdatumLte { get; set; }
            /// <summary>URI van een statustype. Binnen de e-Suite is dat een zaak status.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("statustype")]
            public string? Statustype { get; set; }
#nullable restore
#else
            [QueryParameter("statustype")]
            public string Statustype { get; set; }
#endif
            /// <summary>URI van het zaaktype.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("zaaktype")]
            public string? Zaaktype { get; set; }
#nullable restore
#else
            [QueryParameter("zaaktype")]
            public string Zaaktype { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        public class ZakenRequestBuilderGetRequestConfiguration : RequestConfiguration<ZakenRequestBuilderGetQueryParameters> {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        public class ZakenRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters> {
        }
    }
}
